#include <WiFi.h>
#include <WiFiUdp.h>
#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
 
// =====================
// CONFIGURATION
// =====================
const char* ssid     = "De Klerk 24";       // your WiFi SSID
const char* password = "Joshua500@";   // your WiFi password
// const char* udpAddress = "192.168.0.119";   // your PC's IPv4 address
// const char* udpAddress = "192.168.0.255";  // With broadcast address:
const char* udpAddress = "239.0.0.57";  // Multicast group IP
const int udpPort = 12345;                   // must match Python script

// =====================
// GLOBAL OBJECTS
// =====================
WiFiUDP udp;
Adafruit_MPU6050 mpu;
 
void setup() {
  Serial.begin(115200);
  delay(100);
 
  // ----- Connect to WiFi -----
  Serial.println();
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
 
  Serial.println("\nWiFi connected!");
  Serial.print("ESP32 IP address: ");
  Serial.println(WiFi.localIP());
 
  // ----- Initialize MPU6050 -----
  Wire.begin(21, 22); // SDA=21, SCL=22 on most ESP32 boards
  if (!mpu.begin()) {
    Serial.println("MPU6050 not found! Check wiring and power.");
    while (1) delay(1000);
  }
  Serial.println("MPU6050 detected and initialized.");
 
  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);
 
  // ----- Start UDP -----
  udp.begin(udpPort);
  Serial.print("UDP started on port ");
  Serial.println(udpPort);
}
 
void loop() {
  // Read sensor data
  sensors_event_t accel, gyro, temp;
  mpu.getEvent(&accel, &gyro, &temp);
 
  // Construct JSON string manually
  String jsonData = "{";
  jsonData += "\"accel_x\":" + String(accel.acceleration.x, 2) + ",";
  jsonData += "\"accel_y\":" + String(accel.acceleration.y, 2) + ",";
  jsonData += "\"accel_z\":" + String(accel.acceleration.z, 2) + ",";
  jsonData += "\"gyro_x\":" + String(gyro.gyro.x, 2) + ",";
  jsonData += "\"gyro_y\":" + String(gyro.gyro.y, 2) + ",";
  jsonData += "\"gyro_z\":" + String(gyro.gyro.z, 2) + ",";
  jsonData += "\"temp_c\":" + String(temp.temperature, 2);
  jsonData += "}";
 
  // Send via UDP
  udp.beginPacket(udpAddress, udpPort);
  udp.print(jsonData);
  udp.endPacket();
 
  // Debug print to Serial Monitor
  Serial.print("Sent: ");
  Serial.println(jsonData);
 
  delay(100); // ~10 samples per second
}